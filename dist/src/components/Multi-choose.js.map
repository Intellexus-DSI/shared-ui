{"version":3,"file":"Multi-choose.js","sources":["../../../src/components/Multi-choose.tsx"],"sourcesContent":["import { useState } from \"react\";\r\nimport TextField from \"@mui/material/TextField\";\r\nimport Autocomplete from \"@mui/material/Autocomplete\";\r\nimport Chip from \"@mui/material/Chip\";\r\nimport CheckIcon from \"@mui/icons-material/Check\";\r\n\r\ninterface Option {\r\n    label: string;\r\n    code: string;\r\n}\r\n\r\ninterface MultiSelectCollectionsProps {\r\n    options: Option[];\r\n    label?: string;\r\n}\r\n\r\nexport const MultiSelectCollections: React.FC<MultiSelectCollectionsProps> = ({\r\n    options,\r\n    label = \"Exclude collections\",\r\n}) => {\r\n    const [selected, setSelected] = useState<Option[]>([]);\r\n\r\n    return (\r\n        <Autocomplete\r\n            multiple\r\n            options={options}\r\n            value={selected}\r\n            onChange={(_, newValue) => setSelected(newValue)}\r\n            renderOption={(props, option, { selected: isSelected }) => (\r\n                <li {...props}>\r\n                    {option.label} ({option.code})\r\n                    {isSelected ? <CheckIcon style={{ marginLeft: 8 }} /> : null}\r\n                </li>\r\n            )}\r\n            getOptionLabel={(option) => `${option.label} (${option.code})`}\r\n            renderTags={(value: Option[], getTagProps) =>\r\n                value.map((option: Option, index: number) => (\r\n                    <Chip\r\n                        label={`${option.label} (${option.code})`}\r\n                        {...getTagProps({ index })}\r\n                    />\r\n                ))\r\n            }\r\n            renderInput={(params) => (\r\n                <TextField {...params} variant=\"outlined\" label={label} />\r\n            )}\r\n        />\r\n    );\r\n}\r\n\r\nexport default MultiSelectCollections;"],"names":["_jsx","_jsxs"],"mappings":";;;;;;;AAgBO,MAAM,sBAAsB,GAA0C,CAAC,EAC1E,OAAO,EACP,KAAK,GAAG,qBAAqB,GAChC,KAAI;IACD,MAAM,CAAC,QAAQ,EAAE,WAAW,CAAC,GAAG,QAAQ,CAAW,EAAE,CAAC;AAEtD,IAAA,QACIA,qBAAA,CAAC,YAAY,EAAA,EACT,QAAQ,QACR,OAAO,EAAE,OAAO,EAChB,KAAK,EAAE,QAAQ,EACf,QAAQ,EAAE,CAAC,CAAC,EAAE,QAAQ,KAAK,WAAW,CAAC,QAAQ,CAAC,EAChD,YAAY,EAAE,CAAC,KAAK,EAAE,MAAM,EAAE,EAAE,QAAQ,EAAE,UAAU,EAAE,MAClDC,sBAAA,CAAA,IAAA,EAAA,MAAA,CAAA,MAAA,CAAA,EAAA,EAAQ,KAAK,EAAA,EAAA,QAAA,EAAA,CACR,MAAM,CAAC,KAAK,EAAA,IAAA,EAAI,MAAM,CAAC,IAAI,EAAA,GAAA,EAC3B,UAAU,GAAGD,qBAAA,CAAC,SAAS,EAAA,EAAC,KAAK,EAAE,EAAE,UAAU,EAAE,CAAC,EAAE,EAAA,CAAI,GAAG,IAAI,CAAA,EAAA,CAAA,CAC3D,CACR,EACD,cAAc,EAAE,CAAC,MAAM,KAAK,GAAG,MAAM,CAAC,KAAK,CAAA,EAAA,EAAK,MAAM,CAAC,IAAI,CAAA,CAAA,CAAG,EAC9D,UAAU,EAAE,CAAC,KAAe,EAAE,WAAW,KACrC,KAAK,CAAC,GAAG,CAAC,CAAC,MAAc,EAAE,KAAa,MACpCA,sBAAC,IAAI,EAAA,MAAA,CAAA,MAAA,CAAA,EACD,KAAK,EAAE,CAAA,EAAG,MAAM,CAAC,KAAK,CAAA,EAAA,EAAK,MAAM,CAAC,IAAI,CAAA,CAAA,CAAG,EAAA,EACrC,WAAW,CAAC,EAAE,KAAK,EAAE,CAAC,EAC5B,CACL,CAAC,EAEN,WAAW,EAAE,CAAC,MAAM,MAChBA,qBAAA,CAAC,SAAS,EAAA,MAAA,CAAA,MAAA,CAAA,EAAA,EAAK,MAAM,IAAE,OAAO,EAAC,UAAU,EAAC,KAAK,EAAE,KAAK,IAAI,CAC7D,EAAA,CACH;AAEV;;;;"}